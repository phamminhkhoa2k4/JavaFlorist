// <auto-generated />
using System;
using JavaFlorist.Models.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JavaFlorist.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JavaFlorist.Models.Domain.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("cust_id")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("cust_id")
                        .IsUnique();

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Blog", b =>
                {
                    b.Property<decimal>("blog_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("blog_id"), 1L, 1);

                    b.Property<DateTime>("blog_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("thumbnail")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.HasKey("blog_id");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Bouquet_Info", b =>
                {
                    b.Property<decimal>("bouquet_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("bouquet_id"), 1L, 1);

                    b.Property<string>("bouquetImage")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("sold")
                        .HasColumnType("int");

                    b.HasKey("bouquet_id");

                    b.ToTable("Bouquet_Info");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Cart", b =>
                {
                    b.Property<decimal>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CartId"), 1L, 1);

                    b.HasKey("CartId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.CartItem", b =>
                {
                    b.Property<decimal>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("CartItemId"), 1L, 1);

                    b.Property<decimal?>("CartId")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("bouquet_id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("cust_id")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("bouquet_id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Contact", b =>
                {
                    b.Property<decimal>("contact_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("contact_id"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("marked")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("contact_id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Customer", b =>
                {
                    b.Property<decimal>("cust_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("cust_id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("F_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)");

                    b.Property<string>("L_name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("P_no")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("cust_id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Delivery_Info", b =>
                {
                    b.Property<decimal>("delivery_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("delivery_id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Delivery_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Phone")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("delivery_id");

                    b.ToTable("Delivery_Info");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Discount", b =>
                {
                    b.Property<decimal>("discount_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("discount_id"), 1L, 1);

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("count")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("decrease")
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("discount_id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Occasion", b =>
                {
                    b.Property<decimal>("Occasion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Occasion_id"), 1L, 1);

                    b.Property<bool?>("IsPattern")
                        .HasColumnType("bit");

                    b.Property<string>("Occasion_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Occasion_id");

                    b.ToTable("Occassion");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Order", b =>
                {
                    b.Property<decimal>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("order_id"), 1L, 1);

                    b.Property<decimal>("CartId")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Occasion_id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("cust_id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("delivery_id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal?>("discount_id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2");

                    b.HasKey("order_id");

                    b.HasIndex("CartId");

                    b.HasIndex("Occasion_id");

                    b.HasIndex("cust_id");

                    b.HasIndex("delivery_id");

                    b.HasIndex("discount_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Wishlist", b =>
                {
                    b.Property<decimal>("wishlist_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("wishlist_id"), 1L, 1);

                    b.Property<decimal>("bouquet_id")
                        .HasColumnType("numeric(18,0)");

                    b.Property<decimal>("cust_id")
                        .HasColumnType("numeric(18,0)");

                    b.HasKey("wishlist_id");

                    b.HasIndex("bouquet_id");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.ApplicationUser", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.Customer", "Customer")
                        .WithOne()
                        .HasForeignKey("JavaFlorist.Models.Domain.ApplicationUser", "cust_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.CartItem", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("JavaFlorist.Models.Domain.Bouquet_Info", "Bouquet")
                        .WithMany()
                        .HasForeignKey("bouquet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bouquet");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Order", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavaFlorist.Models.Domain.Occasion", "Occasion")
                        .WithMany()
                        .HasForeignKey("Occasion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavaFlorist.Models.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("cust_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavaFlorist.Models.Domain.Delivery_Info", "Delivery_Info")
                        .WithMany()
                        .HasForeignKey("delivery_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavaFlorist.Models.Domain.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("discount_id");

                    b.Navigation("Cart");

                    b.Navigation("Customer");

                    b.Navigation("Delivery_Info");

                    b.Navigation("Discount");

                    b.Navigation("Occasion");
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Wishlist", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.Bouquet_Info", "Bouquet_Info")
                        .WithMany()
                        .HasForeignKey("bouquet_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bouquet_Info");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JavaFlorist.Models.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("JavaFlorist.Models.Domain.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JavaFlorist.Models.Domain.Cart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
